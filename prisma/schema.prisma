// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @relation(fields: [roleId], references: [id])
  roleId   Int

  @@map("users")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]

  @@map("roles")
}

model Product {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  price   Int
  picture Picture[]
  ordersProduct OrderProduct[]

  @@map("products")
}

model Picture {
  id         Int     @id @default(autoincrement())
  pictureUrl String
  productId  Int
  product    Product @relation(fields: [productId], references: [id])
  isMain Boolean
  themesPicture ThemePicture[]

  @@map("pictures")
}

model Order {
  id           Int      @id @default(autoincrement())
  clientName   String
  clientId     Int?
  totalPrice  Int
  deliveryDate DateTime
  status       String
  amountPaid   Int
  orderProducts OrderProduct[]

  @@map("orders")
}

model OrderProduct {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  products Product @relation(fields: [productId], references: [id])
  productId Int
  priceUnit Int
  quantity Int

  @@map("orderProducts")
}

model Theme {
  id Int @id @default(autoincrement())
  name String @unique
  themePictures ThemePicture[]

  @@map("themes")
}

model ThemePicture {
  id Int @id @default(autoincrement())
  theme Theme @relation(fields: [themeId], references: [id])
  themeId Int
  picture Picture @relation(fields: [pictureId], references: [id])
  pictureId Int

  @@map("themesPictures")
}